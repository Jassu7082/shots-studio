// ignore: unused_import
import 'package:intl/intl.dart' as intl;
import 'app_localizations.dart';

// ignore_for_file: type=lint

/// The translations for Hindi (`hi`).
class AppLocalizationsHi extends AppLocalizations {
  AppLocalizationsHi([String locale = 'hi']) : super(locale);

  @override
  String get appTitle => 'рд╢реЙрдЯреНрд╕ рд╕реНрдЯреВрдбрд┐рдпреЛ';

  @override
  String get searchScreenshots => 'рд╕реНрдХреНрд░реАрдирд╢реЙрдЯ рдЦреЛрдЬреЗрдВ';

  @override
  String analyzed(int count, int total) {
    return 'рд╡рд┐рд╢реНрд▓реЗрд╖рд┐рдд $count/$total';
  }

  @override
  String get developerModeDisabled => 'рдЙрдиреНрдирдд рд╕реЗрдЯрд┐рдВрдЧреНрд╕ рдЕрдХреНрд╖рдо';

  @override
  String get collections => 'рд╕рдВрдЧреНрд░рд╣';

  @override
  String get screenshots => 'рд╕реНрдХреНрд░реАрдирд╢реЙрдЯ';

  @override
  String get settings => 'рд╕реЗрдЯрд┐рдВрдЧреНрд╕';

  @override
  String get about => 'рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ';

  @override
  String get privacy => 'рдЧреЛрдкрдиреАрдпрддрд╛';

  @override
  String get createCollection => 'рд╕рдВрдЧреНрд░рд╣ рдмрдирд╛рдПрдВ';

  @override
  String get editCollection => 'рд╕рдВрдЧреНрд░рд╣ рд╕рдВрдкрд╛рджрд┐рдд рдХрд░реЗрдВ';

  @override
  String get deleteCollection => 'рд╕рдВрдЧреНрд░рд╣ рд╣рдЯрд╛рдПрдВ';

  @override
  String get collectionName => 'рд╕рдВрдЧреНрд░рд╣ рдХрд╛ рдирд╛рдо';

  @override
  String get save => 'рд╕реЗрд╡ рдХрд░реЗрдВ';

  @override
  String get cancel => 'рд░рджреНрдж рдХрд░реЗрдВ';

  @override
  String get delete => 'рд╣рдЯрд╛рдПрдВ';

  @override
  String get confirm => 'рдкреБрд╖реНрдЯрд┐ рдХрд░реЗрдВ';

  @override
  String get yes => 'рд╣рд╛рдВ';

  @override
  String get no => 'рдирд╣реАрдВ';

  @override
  String get ok => 'рдареАрдХ рд╣реИ';

  @override
  String get search => 'рдЦреЛрдЬреЗрдВ';

  @override
  String get noResults => 'рдХреЛрдИ рдкрд░рд┐рдгрд╛рдо рдирд╣реАрдВ рдорд┐рд▓рд╛';

  @override
  String get loading => 'рд▓реЛрдб рд╣реЛ рд░рд╣рд╛ рд╣реИ...';

  @override
  String get error => 'рддреНрд░реБрдЯрд┐';

  @override
  String get retry => 'рдкреБрдирдГ рдкреНрд░рдпрд╛рд╕ рдХрд░реЗрдВ';

  @override
  String get share => 'рд╕рд╛рдЭрд╛ рдХрд░реЗрдВ';

  @override
  String get copy => 'рдХреЙрдкреА рдХрд░реЗрдВ';

  @override
  String get paste => 'рдкреЗрд╕реНрдЯ рдХрд░реЗрдВ';

  @override
  String get selectAll => 'рд╕рднреА рдХрд╛ рдЪрдпрди рдХрд░реЗрдВ';

  @override
  String get aiSettings => 'AI рд╕реЗрдЯрд┐рдВрдЧреНрд╕';

  @override
  String get apiKey => 'API рдХреА';

  @override
  String get modelName => 'рдореЙрдбрд▓ рдирд╛рдо';

  @override
  String get autoProcessing => 'рдСрдЯреЛ рдкреНрд░реЛрд╕реЗрд╕рд┐рдВрдЧ';

  @override
  String get enabled => 'рд╕рдХреНрд╖рдо';

  @override
  String get disabled => 'рдЕрдХреНрд╖рдо';

  @override
  String get theme => 'рдереАрдо';

  @override
  String get lightTheme => 'рд▓рд╛рдЗрдЯ';

  @override
  String get darkTheme => 'рдбрд╛рд░реНрдХ';

  @override
  String get systemTheme => 'рд╕рд┐рд╕реНрдЯрдо';

  @override
  String get language => 'рднрд╛рд╖рд╛';

  @override
  String get analytics => 'рдПрдирд╛рд▓рд┐рдЯрд┐рдХреНрд╕';

  @override
  String get betaTesting => 'Beta Testing';

  @override
  String get writeTagsToXMP => 'XMP рдореЗрдВ рдЯреИрдЧ рд▓рд┐рдЦреЗрдВ';

  @override
  String get xmpMetadataWritten => 'XMP рдореЗрдЯрд╛рдбреЗрдЯрд╛ рдлрд╛рдЗрд▓ рдореЗрдВ рд▓рд┐рдЦрд╛ рдЧрдпрд╛';

  @override
  String get advancedSettings => 'рдЙрдиреНрдирдд рд╕реЗрдЯрд┐рдВрдЧреНрд╕';

  @override
  String get developerMode => 'рдЙрдиреНрдирдд рд╕реЗрдЯрд┐рдВрдЧреНрд╕';

  @override
  String get safeDelete => 'рд╕реБрд░рдХреНрд╖рд┐рдд рдбрд┐рд▓реАрдЯ';

  @override
  String get sourceCode => 'рд╕реЛрд░реНрд╕ рдХреЛрдб';

  @override
  String get support => 'рд╕рд╣рд╛рдпрддрд╛';

  @override
  String get checkForUpdates => 'рдЕрдкрдбреЗрдЯ рдЪреЗрдХ рдХрд░реЗрдВ';

  @override
  String get privacyNotice => 'рдЧреЛрдкрдиреАрдпрддрд╛ рд╕реВрдЪрдирд╛';

  @override
  String get analyticsAndTelemetry => 'рдПрдирд╛рд▓рд┐рдЯрд┐рдХреНрд╕ рдФрд░ рдЯреЗрд▓реАрдореЗрдЯреНрд░реА';

  @override
  String get performanceMenu => 'рдкреНрд░рджрд░реНрд╢рди рдореЗрдиреВ';

  @override
  String get serverMessages => 'рд╕рд░реНрд╡рд░ рд╕рдВрджреЗрд╢';

  @override
  String get maxParallelAI => 'рдЕрдзрд┐рдХрддрдо рд╕рдорд╛рдирд╛рдВрддрд░ AI';

  @override
  String get enableScreenshotLimit => 'рд╕реНрдХреНрд░реАрдирд╢реЙрдЯ рд╕реАрдорд╛ рд╕рдХреНрд╖рдо рдХрд░реЗрдВ';

  @override
  String get tags => 'рдЯреИрдЧреНрд╕';

  @override
  String get aiDetails => 'AI рд╡рд┐рд╡рд░рдг';

  @override
  String get size => 'рдЖрдХрд╛рд░';

  @override
  String get addDescription => 'рд╡рд┐рд╡рд░рдг рдЬреЛрдбрд╝реЗрдВ';

  @override
  String get addTag => 'рдЯреИрдЧ рдЬреЛрдбрд╝реЗрдВ';

  @override
  String get amoledMode => 'AMOLED рдореЛрдб';

  @override
  String get notifications => 'рд╕реВрдЪрдирд╛рдПрдВ';

  @override
  String get permissions => 'рдЕрдиреБрдорддрд┐рдпрд╛рдВ';

  @override
  String get storage => 'рд╕реНрдЯреЛрд░реЗрдЬ';

  @override
  String get camera => 'рдХреИрдорд░рд╛';

  @override
  String get version => 'рд╕рдВрд╕реНрдХрд░рдг';

  @override
  String get buildNumber => 'рдмрд┐рд▓реНрдб рдирдВрдмрд░';

  @override
  String get ocrResults => 'OCR рдкрд░рд┐рдгрд╛рдо';

  @override
  String get extractedText => 'рдирд┐рдХрд╛рд▓рд╛ рдЧрдпрд╛ рдЯреЗрдХреНрд╕реНрдЯ';

  @override
  String get noTextFound => 'рдЫрд╡рд┐ рдореЗрдВ рдХреЛрдИ рдЯреЗрдХреНрд╕реНрдЯ рдирд╣реАрдВ рдорд┐рд▓рд╛';

  @override
  String get processing => 'рдкреНрд░реЛрд╕реЗрд╕рд┐рдВрдЧ...';

  @override
  String get selectImage => 'рдЫрд╡рд┐ рдЪреБрдиреЗрдВ';

  @override
  String get takePhoto => 'рдлреЛрдЯреЛ рд▓реЗрдВ';

  @override
  String get fromGallery => 'рдЧреИрд▓рд░реА рд╕реЗ';

  @override
  String get imageSelected => 'рдЫрд╡рд┐ рдЪрдпрдирд┐рдд';

  @override
  String get noImageSelected => 'рдХреЛрдИ рдЫрд╡рд┐ рдЪрдпрдирд┐рдд рдирд╣реАрдВ';

  @override
  String get apiKeyRequired => 'AI рд╕реБрд╡рд┐рдзрд╛рдУрдВ рдХреЗ рд▓рд┐рдП рдЖрд╡рд╢реНрдпрдХ';

  @override
  String get apiKeyValid => 'API рдХреБрдВрдЬреА рд╡реИрдз рд╣реИ';

  @override
  String get apiKeyValidationFailed => 'API рдХреБрдВрдЬреА рд╕рддреНрдпрд╛рдкрди рдЕрд╕рдлрд▓';

  @override
  String get apiKeyNotValidated => 'API рдХреБрдВрдЬреА рд╕реЗрдЯ рд╣реИ (рд╕рддреНрдпрд╛рдкрд┐рдд рдирд╣реАрдВ)';

  @override
  String get enterApiKey => 'Gemini API рдХреБрдВрдЬреА рджрд░реНрдЬ рдХрд░реЗрдВ';

  @override
  String get validateApiKey => 'API рдХреБрдВрдЬреА рд╕рддреНрдпрд╛рдкрд┐рдд рдХрд░реЗрдВ';

  @override
  String get valid => 'рд╡реИрдз';

  @override
  String get autoProcessingDescription =>
      'рд╕реНрдХреНрд░реАрдирд╢реЙрдЯ рдЬреЛрдбрд╝реЗ рдЬрд╛рдиреЗ рдкрд░ рд╕реНрд╡рдЪрд╛рд▓рд┐рдд рд░реВрдк рд╕реЗ рдкреНрд░реЛрд╕реЗрд╕ рд╣реЛрдВрдЧреЗ';

  @override
  String get manualProcessingOnly => 'рдХреЗрд╡рд▓ рдореИрдиреНрдпреБрдЕрд▓ рдкреНрд░реЛрд╕реЗрд╕рд┐рдВрдЧ';

  @override
  String get amoledModeDescription =>
      'AMOLED рд╕реНрдХреНрд░реАрди рдХреЗ рд▓рд┐рдП рдЕрдиреБрдХреВрд▓рд┐рдд рдбрд╛рд░реНрдХ рдереАрдо';

  @override
  String get defaultDarkTheme => 'рдбрд┐рдлрд╝реЙрд▓реНрдЯ рдбрд╛рд░реНрдХ рдереАрдо';

  @override
  String get getApiKey => 'API рдХреБрдВрдЬреА рдкреНрд░рд╛рдкреНрдд рдХрд░реЗрдВ';

  @override
  String get stopProcessing => 'рдкреНрд░рд╕рдВрд╕реНрдХрд░рдг рд░реЛрдХреЗрдВ';

  @override
  String get processWithAI => 'AI рдХреЗ рд╕рд╛рде рдкреНрд░рд╕рдВрд╕реНрдХрд░рдг';

  @override
  String get createFirstCollection => 'рдЕрдкрдирд╛ рдкрд╣рд▓рд╛ рд╕рдВрдЧреНрд░рд╣ рдмрдирд╛рдПрдВ';

  @override
  String get organizeScreenshots => 'рдЕрдкрдиреЗ рд╕реНрдХреНрд░реАрдирд╢реЙрдЯ рд╡реНрдпрд╡рд╕реНрдерд┐рдд рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП';

  @override
  String get cancelSelection => 'рдЪрдпрди рд░рджреНрдж рдХрд░реЗрдВ';

  @override
  String get deselectAll => 'рд╕рднреА рдХрд╛ рдЪрдпрди рд░рджреНрдж рдХрд░реЗрдВ';

  @override
  String get deleteSelected => 'рдЪрдпрдирд┐рдд рдХреЛ рд╣рдЯрд╛рдПрдВ';

  @override
  String get clearCorruptFiles => 'рджреВрд╖рд┐рдд рдлрд╛рдЗрд▓реЗрдВ рд╕рд╛рдлрд╝ рдХрд░реЗрдВ';

  @override
  String get clearCorruptFilesConfirm => 'рджреВрд╖рд┐рдд рдлрд╛рдЗрд▓реЗрдВ рд╕рд╛рдлрд╝ рдХрд░реЗрдВ?';

  @override
  String get clearCorruptFilesMessage =>
      'рдХреНрдпрд╛ рдЖрдк рд╕реБрдирд┐рд╢реНрдЪрд┐рдд рд╣реИрдВ рдХрд┐ рдЖрдк рд╕рднреА рджреВрд╖рд┐рдд рдлрд╛рдЗрд▓реЛрдВ рдХреЛ рд╣рдЯрд╛рдирд╛ рдЪрд╛рд╣рддреЗ рд╣реИрдВ? рдпрд╣ рдХреНрд░рд┐рдпрд╛ рдкреВрд░реНрд╡рд╡рдд рдирд╣реАрдВ рдХреА рдЬрд╛ рд╕рдХрддреАред';

  @override
  String get corruptFilesCleared => 'рджреВрд╖рд┐рдд рдлрд╛рдЗрд▓реЗрдВ рд╕рд╛рдлрд╝ рдХрд░ рджреА рдЧрдИрдВ';

  @override
  String get noCorruptFiles => 'рдХреЛрдИ рджреВрд╖рд┐рдд рдлрд╛рдЗрд▓ рдирд╣реАрдВ рдорд┐рд▓реА';

  @override
  String get enableLocalAI => 'ЁЯдЦ рд╕реНрдерд╛рдиреАрдп AI рдореЙрдбрд▓ рд╕рдХреНрд╖рдо рдХрд░реЗрдВ';

  @override
  String get localAIBenefits => 'рд╕реНрдерд╛рдиреАрдп AI рдХреЗ рд▓рд╛рдн:';

  @override
  String get localAIOffline =>
      'тАв рдкреВрд░реНрдгрддрдГ рдСрдлрд▓рд╛рдЗрди рдХрд╛рдо рдХрд░рддрд╛ рд╣реИ - рдЗрдВрдЯрд░рдиреЗрдЯ рдХреА рдЖрд╡рд╢реНрдпрдХрддрд╛ рдирд╣реАрдВ';

  @override
  String get localAIPrivacy => 'тАв рдЖрдкрдХрд╛ рдбреЗрдЯрд╛ рдЖрдкрдХреЗ рдбрд┐рд╡рд╛рдЗрд╕ рдкрд░ рдирд┐рдЬреА рд░рд╣рддрд╛ рд╣реИ';

  @override
  String get localAINote => 'рдиреЛрдЯ:';

  @override
  String get localAIBattery => 'тАв рдХреНрд▓рд╛рдЙрдб рдореЙрдбрд▓ рд╕реЗ рдЕрдзрд┐рдХ рдмреИрдЯрд░реА рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░рддрд╛ рд╣реИ';

  @override
  String get localAIRAM => 'тАв рдХрдо рд╕реЗ рдХрдо 4GB рдЙрдкрд▓рдмреНрдз RAM рдХреА рдЖрд╡рд╢реНрдпрдХрддрд╛ рд╣реИ';

  @override
  String get localAIPrivacyNote =>
      'рдореЙрдбрд▓ рдмреЗрд╣рддрд░ рдЧреЛрдкрдиреАрдпрддрд╛ рдХреЗ рд▓рд┐рдП рдЖрдкрдХреЗ рд╕реНрдХреНрд░реАрдирд╢реЙрдЯ рдХреЛ рд╕реНрдерд╛рдиреАрдп рд░реВрдк рд╕реЗ рдкреНрд░реЛрд╕реЗрд╕ рдХрд░реЗрдЧрд╛ред';

  @override
  String get enableLocalAIButton => 'рд╕реНрдерд╛рдиреАрдп AI рд╕рдХреНрд╖рдо рдХрд░реЗрдВ';

  @override
  String get reminders => 'рд░рд┐рдорд╛рдЗрдВрдбрд░';

  @override
  String get activeReminders => 'рд╕рдХреНрд░рд┐рдп';

  @override
  String get pastReminders => 'рдкреБрд░рд╛рдиреЗ';

  @override
  String get noActiveReminders =>
      'рдХреЛрдИ рд╕рдХреНрд░рд┐рдп рд░рд┐рдорд╛рдЗрдВрдбрд░ рдирд╣реАрдВред\nрд╕реНрдХреНрд░реАрдирд╢реЙрдЯ рд╡рд┐рд╡рд░рдг рд╕реЗ рд░рд┐рдорд╛рдЗрдВрдбрд░ рд╕реЗрдЯ рдХрд░реЗрдВред';

  @override
  String get noPastReminders => 'рдХреЛрдИ рдкреБрд░рд╛рдиреЗ рд░рд┐рдорд╛рдЗрдВрдбрд░ рдирд╣реАрдВред';

  @override
  String get editReminder => 'рд░рд┐рдорд╛рдЗрдВрдбрд░ рд╕рдВрдкрд╛рджрд┐рдд рдХрд░реЗрдВ';

  @override
  String get clearReminder => 'рд░рд┐рдорд╛рдЗрдВрдбрд░ рд╕рд╛рдлрд╝ рдХрд░реЗрдВ';

  @override
  String get removePastReminder => 'рд╣рдЯрд╛рдПрдВ';

  @override
  String get pastReminderRemoved => 'рдкреБрд░рд╛рдирд╛ рд░рд┐рдорд╛рдЗрдВрдбрд░ рд╣рдЯрд╛ рджрд┐рдпрд╛ рдЧрдпрд╛';

  @override
  String get supportTheProject => 'рдкреНрд░реЛрдЬреЗрдХреНрдЯ рдХрд╛ рд╕рдорд░реНрдерди рдХрд░реЗрдВ';

  @override
  String get supportShotsStudio => 'Shots Studio рдХрд╛ рд╕рдорд░реНрдерди рдХрд░реЗрдВ';

  @override
  String get supportDescription =>
      'рдЖрдкрдХрд╛ рд╕рдорд░реНрдерди рдЗрд╕ рдкреНрд░реЛрдЬреЗрдХреНрдЯ рдХреЛ рдЬреАрд╡рд┐рдд рд░рдЦрдиреЗ рдореЗрдВ рдорджрдж рдХрд░рддрд╛ рд╣реИ рдФрд░ рд╣рдореЗрдВ рдирдИ рд╢рд╛рдирджрд╛рд░ рд╕реБрд╡рд┐рдзрд╛рдПрдВ рдЬреЛрдбрд╝рдиреЗ рдореЗрдВ рд╕рдХреНрд╖рдо рдмрдирд╛рддрд╛ рд╣реИ';

  @override
  String get availableNow => 'рдЕрднреА рдЙрдкрд▓рдмреНрдз';

  @override
  String get comingSoon => 'рдЬрд▓реНрдж рдЖ рд░рд╣рд╛ рд╣реИ';

  @override
  String get everyContributionMatters => 'рд╣рд░ рдпреЛрдЧрджрд╛рди рдорд╛рдпрдиреЗ рд░рдЦрддрд╛ рд╣реИ';

  @override
  String get supportFooterDescription =>
      'рдЗрд╕ рдкреНрд░реЛрдЬреЗрдХреНрдЯ рдХрд╛ рд╕рдорд░реНрдерди рдХрд░рдиреЗ рдкрд░ рд╡рд┐рдЪрд╛рд░ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдзрдиреНрдпрд╡рд╛рджред рдЖрдкрдХрд╛ рдпреЛрдЧрджрд╛рди рд╣рдореЗрдВ Shots Studio рдХреЛ рдмрдирд╛рдП рд░рдЦрдиреЗ рдФрд░ рд╕реБрдзрд╛рд░рдиреЗ рдореЗрдВ рдорджрдж рдХрд░рддрд╛ рд╣реИред рд╡рд┐рд╢реЗрд╖ рд╡реНрдпрд╡рд╕реНрдерд╛ рдпрд╛ рдЕрдВрддрд░реНрд░рд╛рд╖реНрдЯреНрд░реАрдп рд╡рд╛рдпрд░ рдЯреНрд░рд╛рдВрд╕рдлрд░ рдХреЗ рд▓рд┐рдП, рдХреГрдкрдпрд╛ GitHub рдХреЗ рдорд╛рдзреНрдпрдо рд╕реЗ рд╕рдВрдкрд░реНрдХ рдХрд░реЗрдВред';

  @override
  String get contactOnGitHub => 'GitHub рдкрд░ рд╕рдВрдкрд░реНрдХ рдХрд░реЗрдВ';

  @override
  String get noSponsorshipOptions =>
      'рд╡рд░реНрддрдорд╛рди рдореЗрдВ рдХреЛрдИ рдкреНрд░рд╛рдпреЛрдЬрди рд╡рд┐рдХрд▓реНрдк рдЙрдкрд▓рдмреНрдз рдирд╣реАрдВ рд╣реИрдВред';

  @override
  String get close => 'рдмрдВрдж рдХрд░реЗрдВ';
}
